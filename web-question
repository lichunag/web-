“浏览器是如何解析渲染出一个网站的
1通过DNS解析URL地址，例如http://www.baidu.com
2第一步解析出IP 
3路由：找到IP地址所在的服务器
4打包：文件打包压缩这一步是HTTP协议做的
5浏览器解析HTML文件执行JS脚本

“各种选择器的权重
行内> ID>类>标签


“div的box-sizing
属性有两个内容框与边界盒
一般是含量盒>边界框
内容框：
填充和边框不被包含在定义的宽度和高度之内对象的实际宽度等于设置的宽度值和边界，填充之和，即（元素宽度=宽度+边框+填充）。
此属性表现为标准模式下的盒模型，
边界框：
填充和边界被包含在定义的宽度和高度之内。对象的实际宽度就等于设置的宽度值，即使定义有边界和填充也不会改变对象的实际宽度，即（元素宽度=宽度）
此属性表现为怪异模式下的盒模型。

“div框的高度自适应
 当有一个大div包含两个小的div的时候,希望达到一个div的高度随着另一个div的变化而变化
 办法：大div：position：绝对定位
       小的div：position：相对定位；top:0px;bottom：0px;left:根据你的需要设置
       
“对于background的理解
   background-position:
1.关键字, 例如: background-position: top right;
优点: 直观, 可用性高, 各浏览器中表现一致.
缺点: 缺少间隔尺寸. 三个垂直的 (top, center, bottom) 和三个水平的 (left, center, right) 只能为你组合出最多 9 个位置. 不存在其他混式的组合. 并且很难像其他两种数值定位方法一样使用算数进行控制.

2. 像素, 例如: background-position: 0px 0px;
优点: 概念容易被理解, 只要知道如何测量容器左上角和图片左上角之间的距离, 就能准确地推测出图片显示的位置. 像素还能够精确的用数学来控制定位.
缺点: 你必须知道确实的值

3. 百分比, 例如: background-position: 80% 50%;
优点: 可以使用数学来控制定位, 并且比像素定位更加灵活.
缺点: IE 中无法处理复杂的百分比定位. 你可以看看这个测试.
